{
    "Dijkstra": "Dijkstra is one of the most popular algorithms. It guarantees the shortest path. In the beginning, every node has an infinity distance from the start node. The program checks all unvisited neighbors of the current node and updates their values. The next visited node is one with a shorter road from the beginning.",
    "A*": "Astar is considered as the best pathfinding algorithm. It guarantees the shortest path. Every node has an infinity distance from the start node in the beginning.  The program checks all unvisited neighbors of the current node and computes the distance from the start node and assesses the distance to the end node for each of them. The next visited node is one with the lowest sum of both values.",
    "Greedy": "Greedy is a pretty fast algorithm but doesn't guarantee the shortest path. The program checks all unvisited neighbors of the current node and calculates the distance to the end node for each. The next visited node is one with the lowest distance value.",
    "DFS": "DFS is the fastest algorithm in this comparison, however, it does not guarantee the shortest path. The program goes in sequence: top, right, down, left.",
    "Simple Math": "This algorithm is pretty similar to the A*. Every node has an infinity distance from the start node in the beginning. The program checks all unvisited neighbors of a current node, calculate the distance value from the start node, and assesses the distance to the end node for each. The path length to the end node is computed from the Pythagoras theorem. The next visited node is one with the lowest sum of both distances. "
}
