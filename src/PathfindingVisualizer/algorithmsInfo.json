{
    "Dijkstra": "Dijkstra is one of the most popular algorithms. It guarantees the shortest path. At the beginning, every node has infinity distance from start node. Program checks all unvisited neighbors of current node and set them proper distance from start node. Next visited node is one with the lowest distance.",
    "A*": "Astar is consider as the best pathfinding algorithm. It guarantees the shortest path. At the beginning, every node has infinity distance from start node.  Program checks all unvisited neighbors of current node and calculate distance from start node and average distance to end node for each of them. Next visited node is one with the lowest sum of both distances.",
    "Greedy": "Greedy is pretty fast algorithm, but doesn't guarantee the shortest path. Program check all unvisited neighbors of current node and calculate distance to end node for each of them. Next visited node is one with the lowest distance.",
    "DFS": "Really fast and really bad algorithm. It definitly not guarantees the shortest path. Program goes in sequence: top, right, down, left.",
    "Simple Math": "This algorithm is pretty similar to A*. At the beginning, every node has infinity distance from start node.  Program checks all unvisited neighbors of current node and calculate distance from start node and average distance to end node for each of them. Distance to end node is calculated from Pythagoras' theorem. Next visited node is one with the lowest sum of both distances."
}